#!/usr/bin/env bash

# Keep 1000 lines in .bash_history (default is 500)
export HISTSIZE=5000
export HIST
export EDITOR=nvim
export VISUAL=nvim
export FILESIZE=1000

# zstd
if [[ -d ${HOME}/bin/zstd/programs ]]; then
  export PATH="${HOME}/bin/zstd/programs":${PATH}
fi

case $HOSTNAME in
  lapsgs24)
    export MODULEPATH=/usr/share/lmod/6.6/modulefiles/Core
    export MODULEPATH=${HOME}/modulefiles:${MODULEPATH}

    # Go and singularity
    if [[ -d ${HOME}/go ]]; then
      export GOPATH=${HOME}/go
      export PATH=$PATH:/usr/local/go/bin:${GOPATH}/bin
    fi
    export PATH=/usr/local/singularity/bin/:${PATH}
    . /usr/local/etc/bash_completion.d/singularity

    export VAGRANT_HOME=/media/jaustar/external-ssd/virtualmachines/vagrant/.vagrant.d/
    ;;
  neon)
    export MODULEPATH=${MODULEPATH}:/data/scratch/jaustar/modulefiles
    ;;
  sgscl*)
    export MODULEPATH=/scratch-nfs/jaustar/modulefiles:${MODULEPATH}
  ;;
  ipvs-epyc2)
    export MODULEPATH=${MODULEPATH}:/home/jaustar/modulefiles/$HOSTNAME
  ;;
  (*)
    export CODIPACKDIR=/opt/CoDiPack
    export DISTCC_HOSTS="deepthought/5,lzo,cpp"
    case ${HOSTNAME} in
      archpc)
        #Spack
        #export SPACK_ROOT=${HOME}/software/spack
        #. $SPACK_ROOT/share/spack/setup-env.sh
        #export MODULEPATH=/opt/modulefiles:${MODULEPATH}
        #export PETSC_DIR=/opt/petsc-3.11.4-opt
        #export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PETSC_DIR/lib/:/opt/Togl-1.7/lib

      ;;
      *)
      ;;
    esac
	;;
esac

#parse_git_bg() {
#  if [[ $(git status -s 2> /dev/null) ]]; then
#    echo -e "\033[0;31m"
#  else
#    echo -e "\033[0;32m"
#  fi
#}

export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWCOLORHINTS=1

case $HOSTNAME in
  lapsgs24 | neon | helium | sgscl* | kepler | vgpu | argon* )
    export PS1="\[\033[0;32m\]\u\[\033[0;36m\]@\h:\w\[\033[0;32m\]\$(__git_ps1)\n└─(\[\033[1;32m\]\t, \$(ls -1 | wc -l | sed 's: ::g') files, \$(ls -sh | head -n1 | sed 's/total //')b\[\033[1;37m\]\[\033[0;32m\])\342\224\200>\[\033[0m\] "
    ;;
  *)
    export PS1="\u\[\033[1;34m\]@\h\[\033[0m\]:\[\033[0;32m\]\w\[\033[0;32m\]\$(__git_ps1)\n└─(\[\033[1;32m\]\t, \$(ls -1 | wc -l | sed 's: ::g') files, \$(ls -sh | head -n1 | sed 's/total //')b\[\033[1;37m\]\[\033[0;32m\])\342\224\200>\[\033[0m\] "
    export PS1="\u\[\033[1;34m\]@\h\[\033[0m\]:\w\$(__git_ps1)\n\[\033[0;32m\]└─(\[\033[1;32m\]\t,   \$(ls -1 | wc -l | sed 's: ::g') files, \$(ls -sh | head -n1 | sed 's/total //')b\[\033[1;37m\]\[\033[0;32m\])\342\224\200>\[\033[0m\] "
    ;;
esac


# Use gnome-keyring on a desktop session or else run ssh-agent
#This also takes care that only one ssh-agent is running. I don't know if this conflicts with gnome.
#https://wiki.archlinux.org/index.php/SSH_keys#ssh-agent
#if ! pgrep -u "$USER" ssh-agent > /dev/null; then
#    ssh-agent -t 1h > "$XDG_RUNTIME_DIR/ssh-agent.env"
#fi
#if [[ ! -f "$SSH_AUTH_SOCK" ]]; then
#    source "$XDG_RUNTIME_DIR/ssh-agent.env" >/dev/null
#fi
if [[ ! -f "$SSH_AUTH_SOCK" ]]; then
    export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR}/ssh-agent.socket"
fi


#if [[ ! -z "${DESKTOP_SESSION}" ]];then
#    eval $(gnome-keyring-daemon --start)
#    export SSH_AUTH_SOCK
#else
##Start ssh-agent
#	if ! pgrep -u "$USER" ssh-agent > /dev/null; then
#		  ssh-agent > ~/.ssh-agent-thing
#	fi
#	if [[ "$SSH_AGENT_PID" == "" ]]; then
#		  eval "$(<~/.ssh-agent-thing)"
#	fi
#fi

# JAVA
# Make Java use anti-aliasing for nicer fonts
export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true"


JULIA_VERSION=1.6.3
if [ -d ${HOME}/software/julia-${JULIA_VERSION} ]; then
  export PATH="${HOME}/software/julia-${JULIA_VERSION}/bin":"${PATH}"
fi
